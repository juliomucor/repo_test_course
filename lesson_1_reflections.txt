How did viewing a diff between two versions of a file 
help you see the bug that was introduced?
-> Comparing two files with diff -u old.file new.filw
we can see the lines which we add or remove
one of these can contain the bug
if one change produces an error

How could having easy access to the entire history of a file 
make you a more efficient programmer in the long term?
-> I could see all the changes in the file, if thre is a solution
that could be better tahn the actual, I could recover it

What do you think are the pros and cons of manually choosing when 
to create a commit, like you do in Git, vs having versions automatically
saved, like Google Docs does?
-> cons: commit too big or too small
pros: logic unit

Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat
each file separately?

-> It is good, if there is a change that is relationed among files I ccould see the diff

How can you use the commands git log and git diff to view the history of files?
with git log, I can view the commits done and with git diff I can view the differences between the previous commit and the actuak commit

How might using version control make you more confident to make changes that could break something?
If a change breaks the code and I do not know what commit was woring, it is possible reset the code to a snapshot where the bug does not exist and if I use diff I can see the line where the bug is introduced

Now that you have your workspace set up, what do you want to try using Git for?
to become a better programmer, to myself
